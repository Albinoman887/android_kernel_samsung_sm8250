name: RELEASE Lineage Recovery

on:
  push:
    tags:
      - 'recovery-*'

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        variant: ["x1q_chn_openx", "y2q_chn_openx", "z3q_chn_openx"]

    steps:
    - name: Get the version
      id: get_version
      run: echo ::set-output name=VERSION::${GITHUB_REF#refs/tags/recovery-}

    - name: Fetch sources
      uses: actions/checkout@v2
      with:
        path: sources
        submodules: true

    - name: Install dependencies
      run: |
       wget https://apt.llvm.org/llvm.sh
       sudo bash llvm.sh 11
       sudo ln -sf /usr/bin/clang-11 /usr/bin/clang
       sudo ln -sf /usr/bin/ld.lld-11 /usr/bin/ld.lld
       sudo ln -sf /usr/bin/llvm-ar-11 /usr/bin/llvm-ar
       sudo ln -sf /usr/bin/llvm-nm-11 /usr/bin/llvm-nm
       sudo ln -sf /usr/bin/llvm-objcopy-11 /usr/bin/llvm-objcopy
       sudo ln -sf /usr/bin/llvm-objdump-11 /usr/bin/llvm-objdump
       sudo ln -sf /usr/bin/llvm-strip-11 /usr/bin/llvm-strip
       sudo ln -sf /usr/bin/llvm-config-11 /usr/bin/llvm-config
       sudo apt-get install -y binutils-aarch64-linux-gnu gcc-aarch64-linux-gnu binutils-arm-linux-gnueabi gcc-arm-linux-gnueabi
       sudo apt-get install -y libncurses-dev flex bison openssl libssl-dev dkms libelf-dev libudev-dev libpci-dev libiberty-dev autoconf

    - name: Run kernel build script
      run: ./build_kernel.sh ${{ matrix.variant }} JESEC-${{ steps.get_version.outputs.VERSION }}
      working-directory: ${{ github.workspace }}/sources

    - name: 'Upload artifact: Kernel Configuration (.config)'
      uses: actions/upload-artifact@v1
      with:
        name: .config-${{ matrix.variant }}
        path: ${{ github.workspace }}/sources/out/.config

    - name: 'Upload artifact: Kernel Image (Image)'
      uses: actions/upload-artifact@v1
      with:
        name: Image-${{ matrix.variant }}
        path: ${{ github.workspace }}/sources/out/Image

    - name: 'Upload artifact: Device Tree Blob Image (dtb.img)'
      uses: actions/upload-artifact@v1
      with:
        name: dtb.img-${{ matrix.variant }}
        path: ${{ github.workspace }}/sources/out/dtb.img

    - name: 'Upload artifact: Device Tree Blob Overlay Image (dtbo.img)'
      uses: actions/upload-artifact@v1
      with:
        name: dtbo.img-${{ matrix.variant }}
        path: ${{ github.workspace }}/sources/out/dtbo.img

  release:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Get the version
      id: get_version
      run: echo ::set-output name=VERSION::${GITHUB_REF#refs/tags/recovery-}

    - name: Fetch RELEASE tools
      uses: actions/checkout@v2
      with:
        repository: jesec/releasetools_kernel_samsung_sm8250
        path: releasetools

    - name: Create RELEASE
      id: create_release
      uses: actions/create-release@latest
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Lineage Recovery RC ${{ github.ref }}
        prerelease: true

    - name: Store RELEASE URL to file
      run: echo "${{ steps.create_release.outputs.upload_url }}" > release_url.txt

    - name: Upload RELEASE URL file for publish job
      uses: actions/upload-artifact@v1
      with:
        name: release_url.txt
        path: release_url.txt

  publish:
    needs: release
    runs-on: ubuntu-latest

    strategy:
      matrix:
        variant: ["x1q_chn_openx", "y2q_chn_openx", "z3q_chn_openx"]

    steps:
    - name: Get the version
      id: get_version
      run: echo ::set-output name=VERSION::${GITHUB_REF#refs/tags/recovery-}

    - name: Fetch RELEASE tools
      uses: actions/checkout@v2
      with:
        repository: jesec/releasetools_kernel_samsung_sm8250
        path: releasetools

    - name: 'Download artifact: Kernel Image (Image)'
      uses: actions/download-artifact@v1
      with:
        name: Image-${{ matrix.variant }}
        path: ${{ github.workspace }}/releasetools

    - name: 'Download artifact: Device Tree Blob Image (dtb.img)'
      uses: actions/download-artifact@v1
      with:
        name: dtb.img-${{ matrix.variant }}
        path: ${{ github.workspace }}/releasetools

    - name: 'Download artifact: Device Tree Blob Overlay Image (dtbo.img)'
      uses: actions/download-artifact@v1
      with:
        name: dtbo.img-${{ matrix.variant }}
        path: ${{ github.workspace }}/releasetools

    - name: Make RECOVERY image
      run: ./mkbootimg.sh recovery.img Image dtb.img prebuilt/ramdisk/recovery-lineage-magisk.img dtbo.img
      working-directory: ${{ github.workspace }}/releasetools

    - name: Make flashable TAR archive
      run: tar cvf recovery.tar recovery.img
      working-directory: ${{ github.workspace }}/releasetools

    - name: Get model
      id: get_model
      run: |
        model=`./getmodel.sh ${{ matrix.variant }}`
        echo ::set-output name=model::$model
      working-directory: ${{ github.workspace }}/releasetools

    - name: Load RELEASE URL file from release job
      uses: actions/download-artifact@v1
      with:
        name: release_url.txt
        path: ${{ github.workspace }}

    - name: Get RELEASE URL from file
      id: get_release_info
      run: |
        value=`cat ${{ github.workspace }}/release_url.txt`
        echo ::set-output name=upload_url::$value

    - name: "Upload RELEASE asset: RECOVERY Image"
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.get_release_info.outputs.upload_url }}
        asset_path: ${{ github.workspace }}/releasetools/recovery.img
        asset_name: ${{ steps.get_model.outputs.model }}-LINEAGE-RECOVERY-${{ steps.get_version.outputs.VERSION }}.img
        asset_content_type: application/octet-stream

    - name: "Upload RELEASE asset: TAR Flashable"
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.get_release_info.outputs.upload_url }}
        asset_path: ${{ github.workspace }}/releasetools/recovery.tar
        asset_name: ${{ steps.get_model.outputs.model }}-LINEAGE-RECOVERY-${{ steps.get_version.outputs.VERSION }}.tar
        asset_content_type: application/x-tar
